// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Company {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name    String
  cui     String
  rc      String
  address String
  capital Int
  iban    String
  email   String

  invoices        Invoice[]
  clients         CompanyClient[]
  series          InvoiceSeries[]
  products        Product[]
  invoiceProducts InvoiceProduct[]
}

model CompanyClient {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name    String
  cui     String
  rc      String?
  address String
  iban    String?
  email   String?

  seller   Company @relation(fields: [sellerId], references: [id])
  sellerId String  @db.ObjectId
}

model Invoice {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  number Int

  date     String
  deadline String?

  clientName String
  clientCui  String
  currency   String

  issuedByName    String?
  issuedByCnp     String?
  accompanyNotice String?

  delegateName String?
  delegateCnp  String?
  delegateAuto String?

  mentions String?

  subtotal Int
  discount Int
  tva      Int
  total    Int

  company   Company @relation(fields: [companyId], references: [id])
  companyId String  @db.ObjectId

  invoiceProducts   InvoiceProduct[] @relation(fields: [invoiceProductsId], references: [id])
  invoiceProductsId String[]         @db.ObjectId

  serie           InvoiceSeries @relation(fields: [invoiceSeriesId], references: [id])
  invoiceSeriesId String        @db.ObjectId
}

model InvoiceSeries {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name       String
  lastNumber Int
  numbers    Int[]

  invoices Invoice[]

  company   Company @relation(fields: [companyId], references: [id])
  companyId String  @db.ObjectId
}

model Product {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  um   String

  invoiceProducts InvoiceProduct[]

  company   Company @relation(fields: [companyId], references: [id])
  companyId String  @db.ObjectId
}

model InvoiceProduct {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  quantity   Int
  price      Int
  tva        Int
  totalValue Int

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId

  invoice   Invoice[] @relation(fields: [invoiceId], references: [id])
  invoiceId String[]  @db.ObjectId

  company   Company @relation(fields: [companyId], references: [id])
  companyId String  @db.ObjectId
}
